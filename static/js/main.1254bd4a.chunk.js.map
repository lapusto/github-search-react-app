{"version":3,"sources":["components/Navbar.js","context/alert/alertContext.js","context/github/githubContext.js","components/Search.js","components/Card.js","pages/Home.js","pages/About.js","components/Repos.js","pages/Profile.js","components/Alert.js","context/types.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/github/githubReducer.js","context/github/GithubState.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","exact","to","AlertContext","createContext","GithubContext","Search","useState","value","setValue","alert","useContext","github","type","placeholder","onChange","event","target","onKeyPress","key","clearUsers","trim","hide","search","show","Card","user","src","avatar_url","alt","login","Home","loading","users","map","id","About","Repos","repos","repo","href","html_url","rel","name","Profile","match","getUser","getRepos","urlName","params","useEffect","company","location","bio","blog","followers","following","public_repos","public_gists","style","width","Alert","role","text","onClick","SHOW_ALERT","HIDE_ALERT","CLEAR_USERS","GET_REPOS","GET_USER","SEARCH_USERS","SET_LOADING","handlers","state","action","payload","alertReducer","DEFAULT","AlertState","children","useReducer","dispatch","Provider","githubReducer","CLIENT_ID","process","REACT_APP_CLIENT_ID","CLIENT_SECRET","REACT_APP_CLIENT_SECRET","withCreds","url","GithubState","a","setLoading","axios","get","response","data","items","App","path","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1254bd4a.chunk.js","sourcesContent":["import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nexport const Navbar = () => (\r\n  <nav className=\"navbar navbar-dark bg-primary navbar-expand-lg\">\r\n    <div className=\"navbar-brand\">\r\n      Github-Search\r\n    </div>\r\n    <ul className=\"navbar-nav\">\r\n      <li className=\"nav-item\">\r\n        <NavLink exact to=\"/\" className=\"nav-link\">Home</NavLink>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <NavLink to=\"/about\" className=\"nav-link\">About</NavLink>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n)\r\n","import { createContext } from \"react\";\r\n\r\nexport const AlertContext = createContext()","import { createContext } from \"react\";\r\n\r\nexport const GithubContext = createContext()","import React, { useContext, useState } from \"react\";\r\nimport { AlertContext } from \"../context/alert/alertContext\";\r\nimport { GithubContext } from \"../context/github/githubContext\";\r\n\r\nexport const Search = () => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const alert = useContext(AlertContext);\r\n  const github = useContext(GithubContext);\r\n\r\n  const onSubmit = (event) => {\r\n    if (event.key !== \"Enter\") {\r\n      return;\r\n    }\r\n    github.clearUsers();\r\n\r\n    if (value.trim()) {\r\n      alert.hide();\r\n      github.search(value.trim());\r\n    } else {\r\n      alert.show(\"Username can't be empty\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control mb-4\"\r\n        placeholder=\"Enter username\"\r\n        value={value}\r\n        onChange={(event) => setValue(event.target.value)}\r\n        onKeyPress={onSubmit}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const Card = ({user}) => (\r\n  <div className=\"card\">\r\n    <img src={user.avatar_url} alt={user.login} className=\"card-img-top\" />\r\n    <div className=\"card-body\">\r\n      <h5 className=\"card-title\">{user.login}</h5>\r\n      <Link to={'/profile/' + user.login} className=\"btn btn-primary\">Open</Link>\r\n    </div>\r\n  </div>\r\n)\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport { Search } from \"../components/Search\";\r\nimport { Card } from \"../components/Card\";\r\nimport { GithubContext } from \"../context/github/githubContext\";\r\n\r\nexport const Home = () => {\r\n  const { loading, users } = useContext(GithubContext);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Search />\r\n      <div className=\"row\">\r\n        {loading ? (\r\n          <p className=\"text-center\">Loading...</p>\r\n        ) : (\r\n          users.map((user) => {\r\n            return (\r\n              <div className=\"col-sm-4 mb-4\" key={user.id}>\r\n                <Card user={user} />\r\n              </div>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nexport const About = () => {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4\">About</h1>\r\n        <p className=\"lead\">Github user Quick-Search application: enter the Name in the search bar on the homepage.</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Fragment } from 'react'\r\n\r\nexport const Repos = ({repos}) => (\r\n    <Fragment>\r\n        {repos.map(repo => (\r\n            <div className='card mb-3' key={repo.id}>\r\n                <div className='card-body'>\r\n                    <h5>\r\n                        <a href={repo.html_url} target='_blank' rel='noreferrer'>{repo.name}</a>\r\n                    </h5>\r\n                </div>\r\n            </div>\r\n        )\r\n            )}\r\n    </Fragment>\r\n)\r\n\r\n","import React, { Fragment, useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Repos } from \"../components/Repos\";\r\nimport { GithubContext } from \"../context/github/githubContext\";\r\n\r\nexport const Profile = ({ match }) => {\r\n  const { getUser, getRepos, loading, user, repos } = useContext(GithubContext);\r\n  const urlName = match.params.name;\r\n\r\n  useEffect(() => {\r\n    getUser(urlName);\r\n    getRepos(urlName);\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <p className=\"text-center\">Loading...</p>;\r\n  }\r\n\r\n  const {\r\n    name,\r\n    company,\r\n    avatar_url,\r\n    location,\r\n    bio,\r\n    blog,\r\n    login,\r\n    html_url,\r\n    followers,\r\n    following,\r\n    public_repos,\r\n    public_gists,\r\n  } = user;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Link to=\"/\" className=\"btn btn-link\">\r\n        Home\r\n      </Link>\r\n\r\n      <div className=\"card mb-4\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-3 text-center\">\r\n              <img src={avatar_url} alt={name}  style={{width: '150px'}}/>\r\n              <h1>{name}</h1>\r\n              {location && <p>{location}</p>}\r\n            </div>\r\n            <div className=\"col\">\r\n              {bio && (\r\n                <Fragment>\r\n                  <h3>BIO</h3>\r\n                  <p>{bio}</p>\r\n                </Fragment>\r\n              )}\r\n              <a href={html_url} \r\n              target=\"_blank\" \r\n              rel='noreferrer'\r\n              className=\"btn btn-dark mb-2\">Open profile</a>\r\n              <ul>\r\n                {login && <li>\r\n                  <strong>Username: </strong> {login}\r\n                  </li>}\r\n                  {company && <li>\r\n                  <strong>Company: </strong> {company}\r\n                  </li>}\r\n                  {blog && <li>\r\n                  <strong>Website: </strong> {blog}\r\n                  </li>}\r\n              </ul>\r\n                    <span className='badge bg-primary m-1'>Followers: {followers}</span>\r\n                    <span className='badge bg-warning text-dark m-1'>Following: {following}</span>\r\n                    <span className='badge bg-info m-1'>Repositories: {public_repos}</span>\r\n                    <span className='badge bg-success m-1'>Gists: {public_gists}</span>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Repos repos={repos}/>\r\n    </Fragment>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AlertContext } from \"../context/alert/alertContext\";\r\n\r\nexport const Alert = () => {\r\n  const { alert, hide } = useContext(AlertContext);\r\n\r\n  if (!alert) return null;\r\n\r\n  return (\r\n    <div\r\n      className={`alert alert-${alert.type || \"secondary\"}  alert-dismissible`}\r\n      role=\"alert\"\r\n    >\r\n      {alert.text}\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn-close\"\r\n        aria-label=\"Close\"\r\n        onClick={hide}\r\n      ></button>\r\n    </div>\r\n  );\r\n};\r\n","export const SHOW_ALERT = 'SHOW_ALERT'\r\nexport const HIDE_ALERT = 'HIDE_ALERT'\r\nexport const CLEAR_USERS = 'CLEAR_USERS'\r\nexport const GET_REPOS = 'GET_REPOS'\r\nexport const GET_USER = 'GET_USER'\r\nexport const SEARCH_USERS = 'SEARCH_USERS'\r\nexport const SET_LOADING = 'SET_LOADING'\r\n","import { HIDE_ALERT, SHOW_ALERT } from \"../types\";\r\n\r\nconst handlers = {\r\n    [SHOW_ALERT] : (state, action) => action.payload,\r\n    [HIDE_ALERT] : () => null,\r\n    DEFAULT: state => state\r\n}\r\n\r\nexport const alertReducer = (state, action) => {\r\n    const handler = handlers[action.type] || handlers.DEFAULT\r\n    return handler(state, action)\r\n}","import React, { useReducer } from 'react'\r\nimport { HIDE_ALERT, SHOW_ALERT } from '../types'\r\nimport { AlertContext } from './alertContext'\r\nimport { alertReducer } from './alertReducer'\r\n\r\nexport const AlertState = ({children}) => {\r\n\r\nconst [state, dispatch] = useReducer(alertReducer, null)\r\n\r\nconst hide = () => dispatch({type: HIDE_ALERT})\r\n\r\nconst show = (text, type = 'secondary') => {\r\n    dispatch({\r\n        type: SHOW_ALERT,\r\n        payload: {type, text}\r\n    })\r\n}\r\n\r\n    return (\r\n        <AlertContext.Provider value={{\r\n            hide, show, alert: state\r\n        }}>\r\n            {children}\r\n        </AlertContext.Provider>\r\n    )\r\n}","import { CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING } from \"../types\"\r\n\r\nconst handlers = {\r\n    [SEARCH_USERS]: (state, {payload}) => ({...state, users: payload, loading: false}),\r\n    [GET_REPOS]: (state, {payload}) => ({...state, repos: payload, loading: false }) ,\r\n    [GET_USER]: (state, {payload}) => ({...state, user: payload, loading: false }) ,\r\n    [SET_LOADING]: state => ({...state, loading: true}),\r\n    [CLEAR_USERS]:  state => ({...state, users: []}),\r\n    DEFAULT: state => state\r\n}\r\n\r\nexport const githubReducer = (state, action) => {\r\n    const handler = handlers[action.type] || handlers.DEFAULT\r\n    return handler(state, action)\r\n}","import React, {useReducer} from 'react'\r\nimport { CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING } from '../types'\r\nimport { GithubContext } from './githubContext'\r\nimport { githubReducer } from './githubReducer'\r\nimport axios from 'axios'\r\n\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID\r\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET\r\nconst withCreds = url => {\r\n    return `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\r\n}\r\n\r\nexport const GithubState = ({children}) => {\r\n    const initialState = {\r\n        user: {},\r\n        users: [],\r\n        loading: false,\r\n        repos: []\r\n    }\r\nconst [state, dispatch] = useReducer(githubReducer, initialState)\r\n\r\n\r\nconst search = async value => {\r\n    setLoading()\r\n\r\n    const response = await axios.get(\r\n        withCreds(`https://api.github.com/search/users?q=${value}&`))\r\n    dispatch({\r\n        type: SEARCH_USERS,\r\n        payload: response.data.items\r\n    })\r\n}\r\n\r\nconst getUser = async name => {\r\n setLoading()\r\n\r\n const response = await axios.get(\r\n     withCreds(`https://api.github.com/users/${name}?`))\r\n    dispatch({\r\n       type: GET_USER,\r\n       payload: response.data\r\n    })\r\n}\r\n\r\nconst getRepos = async name => {\r\n    setLoading()\r\n\r\n    const response = await axios.get(\r\n        withCreds(`https://api.github.com/users/${name}/repos?per_page=5&`))\r\n\r\n    dispatch({\r\n       type: GET_REPOS,\r\n       payload: response.data\r\n    })\r\n}\r\n\r\nconst clearUsers = () => dispatch({type: CLEAR_USERS})\r\n\r\nconst setLoading = () => dispatch({type: SET_LOADING})\r\n\r\nconst {user, users, repos, loading} = state\r\n\r\n    return (\r\n        <GithubContext.Provider value={{\r\n            setLoading, search, getUser, getRepos, clearUsers,\r\n            user, users, repos, loading\r\n\r\n        }}>\r\n            {children}\r\n        </GithubContext.Provider>\r\n    )\r\n}","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport { Navbar } from \"./components/Navbar\";\r\nimport { Home } from \"./pages/Home\";\r\nimport { About } from \"./pages/About\";\r\nimport { Profile } from \"./pages/Profile\";\r\nimport { Alert } from \"./components/Alert\";\r\nimport { AlertState } from \"./context/alert/AlertState\";\r\nimport { GithubState } from \"./context/github/GithubState\";\r\n\r\nfunction App() {\r\n  return (\r\n    <GithubState>\r\n      <AlertState>\r\n        <BrowserRouter>\r\n          <Navbar />\r\n          <div className=\"container pt-4\">\r\n            <Alert alert={{ text: \"Test alert\" }} />\r\n            <Switch>\r\n              <Route path=\"/\" exact component={Home} />\r\n              <Route path=\"/about\" component={About} />\r\n              <Route path=\"/profile/:name\" component={Profile} />\r\n            </Switch>\r\n          </div>\r\n        </BrowserRouter>\r\n      </AlertState>\r\n    </GithubState>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}